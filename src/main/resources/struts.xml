<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
"http://struts.apache.org/dtds/struts-2.0.dtd">	

<struts>
    <!-- devMode is helpful when you want some extra logs for debugging -->
    <constant name="struts.devMode" value="false" />
    <!-- Global message resource; 
    	 Otherwise you will have seperate message resource for each Action 
    -->
    <constant name="struts.custom.i18n.resources" value="messages" /> 
    <!-- 
    	This is important if you are planning to have slashes in Action URLs
    	e.g. In this demo, employee is deleted using URL /delete/10
    	This this is set to false; then struts will try to find mapping for 
    	URL "/10" instaed of "/delete/10"
     -->
    <constant name="struts.enable.SlashesInActionNames" value="true"/>
    <constant name="struts.action.extension" value=""/>
    <constant name="struts.action.excludePattern" value=".*jsp,.*htm,.*html,.*/css/.*,.*/images/.*,.*/img/.*,.*/font.*,.*/js/.*"/>
    <!-- Normal Action mappings are defined here -->
    <package name="ajax" namespace="" extends="json-default">
        <action name="sendMyRequest" class="com.howtodoinjava.controller.MapAction" method="sendMyRequest">
            <result type="json">
                <param name="excludeNullProperties">true</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="compare" class="com.howtodoinjava.controller.MapAction" method="compare">
            <result type="json">
                <param name="excludeNullProperties">true</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="history1Details" class="com.howtodoinjava.controller.MapAction" method="history1Details">
            <result type="json">
                <param name="excludeNullProperties">true</param>
                <param name="root">history1</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="history2Details" class="com.howtodoinjava.controller.MapAction" method="history2Details">
            <result type="json">
                <param name="excludeNullProperties">true</param>
                <param name="root">history2</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="addToHistory" class="com.howtodoinjava.controller.MapAction" method="addToHistory">
            <result type="json">
                <param name="excludeNullProperties">false</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="sendAgeGroupRequest" class="com.howtodoinjava.controller.MapAction" method="sendAgeGroupRequest">
            <result type="json">
                <param name="excludeNullProperties">false</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="sendDifferentDiseasesRequest" class="com.howtodoinjava.controller.MapAction" method="sendDifferentDiseasesRequest">
            <result type="json">
                <param name="excludeNullProperties">false</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="sendBubbleChartRequest" class="com.howtodoinjava.controller.MapAction" method="sendBubbleChartReuqest">
            <result type="json">
                <param name="excludeNullProperties">false</param>
                <param name="noCache">true</param>
            </result>
        </action>
        <action name="saveSettings" class="com.howtodoinjava.controller.MapAction" method="saveSettings">
            <result type="json">
                <param name="excludeNullProperties">true</param>
                <param name="noCache">true</param>
            </result>
        </action>
    </package>
	<package name="default" namespace="" extends="struts-default">
	    <!-- Two things to Notice: 
	    	 1) class is set to 'editEmployeeAction' which is bean defined by Spring context
	    	 2) We have given the method to be called here as well;
	   	-->
		<action name="list" class="com.howtodoinjava.controller.MapAction" method="showMap">
            <result>/view/mainPage.jsp</result>
        </action>
        <action name="settings" class="com.howtodoinjava.controller.MapAction" method="showSettings">
            <result>/view/settingsPage.jsp</result>
        </action>
        <action name="login">
            <result>/view/login.jsp</result>
        </action>
        <action name="landing">
            <result>/view/landing.jsp</result>
        </action>
        <action name="signout">
            <result>/view/login.jsp</result>
        </action>

        <action name="*">
            <result type="redirect">/landing</result>
        </action>
	</package>
	
</struts>